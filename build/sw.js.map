{"version":3,"sources":["webpack:///sw.js","webpack:///webpack/bootstrap 78fb37d478cd559517f9","webpack:///./src/modules/public-transport-client/sw.js","webpack:///./src/modules/public-transport-client/config.js","webpack:///./~/babel-preset-react-app/~/babel-runtime/regenerator/index.js","webpack:///./~/process/browser.js","webpack:///./src/modules/public-transport-client/dataProvider.js","webpack:///./src/modules/public-transport-initialize-data/initialize.js","webpack:///./~/regenerator-runtime/runtime-module.js","webpack:///./~/regenerator-runtime/runtime.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_dataProvider","_dataProvider2","_config","_config2","loadDataAndInitialize","APP_CACHE_NAME","urlsToCache","apiGetStationsUrl","apiGetRoutesUrl","apiGetTimetablesUrl","self","addEventListener","event","cachePromise","caches","open","then","cache","console","log","addAll","waitUntil","respondWith","fetch","request","catch","match","Object","defineProperty","value","apiPublicTransportServer","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","this","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","i","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","_classCallCheck","instance","Constructor","TypeError","_asyncToGenerator","fn","gen","Promise","resolve","reject","step","key","arg","info","error","done","err","_regenerator","_regenerator2","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_loadDataOnly","_ref","mark","_callee","response","_response","_response2","wrap","_context","prev","next","allStationsLoaded","undefined","localStorage","mode","sent","text","allStationsJSON","allStations","JSON","parse","allRoutesLoaded","allRoutesJSON","allRoutes","allTimetablesLoaded","allTimetablesJSON","allTimetables","stop","loadData","_ref2","_callee2","_context2","loadingStarted","loadDataOnly","_initialize2","_initialize","DataProvider","_ref3","_callee3","_context3","_ref4","_callee4","_context4","getNextStation","currentStation","j","t","nn","stations","getPreviousStation","getTimetable","station","n","timetables","findTimeAfter","time","dateTmp","Date","setMinutes","setHours","setSeconds","day","getDay","kkk","mnkk","table","days","includes","stTime","iik","mnii","times","st","hour","minute","findTimeBefore","ok","stt","initialize","bindRoutesStationsTimetables","tmpArr","tabArr","rr","routes","tmp","find","element","index","stationCode","hashcode","routeCode","tmpTab","startInitializingMoment","now","tmpUsedStations","routesCodes","splice","stationsCodes","rr_stationsCodes","tmpUsed","k","mn","ex","timetable","global","g","window","hadRuntime","regeneratorRuntime","getOwnPropertyNames","indexOf","oldRuntime","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","makeInvokeMethod","tryCatch","type","GeneratorFunction","GeneratorFunctionPrototype","defineIteratorMethods","forEach","method","AsyncIterator","invoke","record","result","hasOwn","__await","unwrapped","enqueue","callInvokeWithMethodAndArg","previousPromise","domain","bind","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","_sent","dispatchException","abrupt","GenStateSuspendedYield","iterator","return","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","values","iterable","iteratorMethod","iteratorSymbol","isNaN","Op","hasOwnProperty","$Symbol","Symbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","inModule","runtime","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","constructor","displayName","isGeneratorFunction","genFun","ctor","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","charAt","slice","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield"],"mappings":"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","file":"sw.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _dataProvider = __webpack_require__(4);\n\t\n\tvar _dataProvider2 = _interopRequireDefault(_dataProvider);\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t//import AppClient from './client';\n\t//let s = '123hello123';\n\t//console.log('111111111111111111111111111111111111111111');\n\t\n\t//if (navigator.onLine === undefined || navigator.onLine === false){\n\t_dataProvider2.default.loadDataAndInitialize();\n\t//}\n\t//else {\n\t//  DataProvider.loadDataOnly();\n\t//}\n\t\n\tvar APP_CACHE_NAME = 'mosm-app-v1';\n\tvar TILE_CACHE_NAME = 'mosm-tiles-v1';\n\t\n\tvar urlsToCache = ['/', '/static/js/bundle.js', '/static/css/style.css', _config2.default.apiGetStationsUrl, _config2.default.apiGetRoutesUrl, _config2.default.apiGetTimetablesUrl];\n\t\n\tself.addEventListener('install', function (event) {\n\t  //console.log('!!!!!!!!!install');\n\t\n\t  // Perform install steps\n\t  var cachePromise = caches.open(APP_CACHE_NAME).then(function (cache) {\n\t    console.log('install: opened cache');\n\t    return cache.addAll(urlsToCache);\n\t  }).then(function () {\n\t    console.log('install: added all urls to cache');\n\t  });\n\t\n\t  event.waitUntil(cachePromise);\n\t});\n\t\n\tself.addEventListener('activate', function (event) {\n\t  //console.log('!!!!!!!!!activate');\n\t\n\t  /**/\n\t});\n\t\n\t/*self.addEventListener('fetch', function(event) {\r\n\t  console.log('there is a fetch');\r\n\t  const { url } = event.request;\r\n\t\r\n\t  event.respondWith(\r\n\t    caches.match(event.request)\r\n\t      .then(function(response) {\r\n\t        // Cache hit - return response\r\n\t        if (response) {\r\n\t          console.log('responding from cache', url);\r\n\t          return response;\r\n\t        }\r\n\t        console.log('fetching and adding to cache', url);\r\n\t        caches.open(TILE_CACHE_NAME).then(cache => cache.add(url));\r\n\t\r\n\t        return fetch(event.request);\r\n\t      }\r\n\t    )\r\n\t  );\r\n\t});*/\n\t\n\t/*self.addEventListener('fetch', function(event) {\r\n\t  event.respondWith(\r\n\t    caches.match(event.request).catch(function() {\r\n\t      return fetch(event.request).then(function(response) {\r\n\t        return caches.open('v1').then(function(cache) {\r\n\t          cache.put(event.request, response.clone());\r\n\t          return response;\r\n\t        });  \r\n\t      });\r\n\t    })\r\n\t  );\r\n\t});*/\n\t\n\tself.addEventListener('fetch', function (event) {\n\t  event.respondWith(fetch(event.request).catch(function () {\n\t    return caches.match(event.request);\n\t  }));\n\t});\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = {\n\t    apiPublicTransportServer: \"https://ptp-97126.app.xervo.io/\",\n\t    apiGetStationsUrl: \"https://publictransportproject.000webhostapp.com/new/json/stations.json\", //\"stations\"\n\t    apiGetRoutesUrl: \"https://publictransportproject.000webhostapp.com/new/json/routes.json\", //\"routes\"\n\t    apiGetTimetablesUrl: \"https://publictransportproject.000webhostapp.com/new/json/timetables.json\" //\"timetables\"\n\t};\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(6);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _regenerator = __webpack_require__(2);\n\t\n\tvar _regenerator2 = _interopRequireDefault(_regenerator);\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _loadDataOnly = function () {\n\t    var _ref = _asyncToGenerator(_regenerator2.default.mark(function _callee() {\n\t        var response, _response, _response2;\n\t\n\t        return _regenerator2.default.wrap(function _callee$(_context) {\n\t            while (1) {\n\t                switch (_context.prev = _context.next) {\n\t                    case 0:\n\t                        if (allStationsLoaded) {\n\t                            _context.next = 18;\n\t                            break;\n\t                        }\n\t\n\t                        if (!(localStorage[\"allStationsJSON\"] === undefined || localStorage[\"allStationsJSON\"] == null)) {\n\t                            _context.next = 15;\n\t                            break;\n\t                        }\n\t\n\t                        console.log(\"Downloading stations from server...\");\n\t\n\t                        _context.next = 5;\n\t                        return fetch(_config2.default.apiGetStationsUrl, { mode: 'no-cors' });\n\t\n\t                    case 5:\n\t                        response = _context.sent;\n\t                        _context.next = 8;\n\t                        return response.text();\n\t\n\t                    case 8:\n\t                        allStationsJSON = _context.sent;\n\t\n\t                        allStations = JSON.parse(allStationsJSON); //await response.json();\n\t\n\t                        if (allStations !== undefined && allStations != null) localStorage[\"allStationsJSON\"] = allStationsJSON;\n\t                        allStationsLoaded = true;\n\t                        console.log(\"Stations loaded from server.\");\n\t                        _context.next = 18;\n\t                        break;\n\t\n\t                    case 15:\n\t                        allStations = JSON.parse(localStorage[\"allStationsJSON\"]);\n\t                        allStationsLoaded = true;\n\t                        console.log(\"Stations loaded from localStorage.\");\n\t\n\t                    case 18:\n\t                        if (allRoutesLoaded) {\n\t                            _context.next = 36;\n\t                            break;\n\t                        }\n\t\n\t                        if (!(localStorage[\"allRoutesJSON\"] === undefined || localStorage[\"allRoutesJSON\"] == null)) {\n\t                            _context.next = 33;\n\t                            break;\n\t                        }\n\t\n\t                        console.log(\"Downloading routes from server...\");\n\t\n\t                        _context.next = 23;\n\t                        return fetch(_config2.default.apiGetRoutesUrl);\n\t\n\t                    case 23:\n\t                        _response = _context.sent;\n\t                        _context.next = 26;\n\t                        return _response.text();\n\t\n\t                    case 26:\n\t                        allRoutesJSON = _context.sent;\n\t\n\t                        allRoutes = JSON.parse(allRoutesJSON); //await response.json();\n\t\n\t                        if (allRoutes !== undefined && allRoutes != null) localStorage[\"allRoutesJSON\"] = allRoutesJSON;\n\t                        allRoutesLoaded = true;\n\t                        console.log(\"Routes loaded from server.\");\n\t                        _context.next = 36;\n\t                        break;\n\t\n\t                    case 33:\n\t                        allRoutes = JSON.parse(localStorage[\"allRoutesJSON\"]);\n\t                        allRoutesLoaded = true;\n\t                        console.log(\"Routes loaded from localStorage.\");\n\t\n\t                    case 36:\n\t                        if (allTimetablesLoaded) {\n\t                            _context.next = 54;\n\t                            break;\n\t                        }\n\t\n\t                        if (!(localStorage[\"allTimetablesJSON\"] === undefined || localStorage[\"allTimetablesJSON\"] == null)) {\n\t                            _context.next = 51;\n\t                            break;\n\t                        }\n\t\n\t                        console.log(\"Downloading timetables from server...\");\n\t\n\t                        _context.next = 41;\n\t                        return fetch(_config2.default.apiGetTimetablesUrl);\n\t\n\t                    case 41:\n\t                        _response2 = _context.sent;\n\t                        _context.next = 44;\n\t                        return _response2.text();\n\t\n\t                    case 44:\n\t                        allTimetablesJSON = _context.sent;\n\t\n\t                        allTimetables = JSON.parse(allTimetablesJSON); //await response.json();\n\t\n\t                        if (allTimetables !== undefined && allTimetables != null) localStorage[\"allTimetablesJSON\"] = allTimetablesJSON;\n\t                        allTimetablesLoaded = true;\n\t                        console.log(\"Timetables loaded from server.\");\n\t                        _context.next = 54;\n\t                        break;\n\t\n\t                    case 51:\n\t                        allTimetables = JSON.parse(localStorage[\"allTimetablesJSON\"]);\n\t                        allTimetablesLoaded = true;\n\t                        console.log(\"Timetables loaded from localStorage.\");\n\t\n\t                    case 54:\n\t                    case 'end':\n\t                        return _context.stop();\n\t                }\n\t            }\n\t        }, _callee, this);\n\t    }));\n\t\n\t    return function _loadDataOnly() {\n\t        return _ref.apply(this, arguments);\n\t    };\n\t}();\n\t\n\tvar loadData = function () {\n\t    var _ref2 = _asyncToGenerator(_regenerator2.default.mark(function _callee2() {\n\t        return _regenerator2.default.wrap(function _callee2$(_context2) {\n\t            while (1) {\n\t                switch (_context2.prev = _context2.next) {\n\t                    case 0:\n\t                        if (loadingStarted) {\n\t                            _context2.next = 5;\n\t                            break;\n\t                        }\n\t\n\t                        loadingStarted = true;\n\t\n\t                        _context2.next = 4;\n\t                        return _loadDataOnly();\n\t\n\t                    case 4:\n\t\n\t                        if (allStationsLoaded && allRoutesLoaded && allTimetablesLoaded) {\n\t                            (0, _initialize2.default)(allStations, allRoutes, allTimetables);\n\t                        }\n\t\n\t                    case 5:\n\t                    case 'end':\n\t                        return _context2.stop();\n\t                }\n\t            }\n\t        }, _callee2, this);\n\t    }));\n\t\n\t    return function loadData() {\n\t        return _ref2.apply(this, arguments);\n\t    };\n\t}();\n\t\n\t//loadData();\n\t\n\tvar _initialize = __webpack_require__(5);\n\t\n\tvar _initialize2 = _interopRequireDefault(_initialize);\n\t\n\tvar _config = __webpack_require__(1);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; } //var fetch = require('node-fetch');\n\t\n\t\n\t//var apiPublicTransportServer = ApiConfig.apiPublicTransportServer;\n\t\n\t/*var strGetStations = apiPublicTransportServer + \"stations/\";\r\n\tstrGetStations = \"json/stations.json\";\r\n\tstrGetStations = \"https://publictransportproject.000webhostapp.com/new/json/stations.json\"; \r\n\t\r\n\tvar strGetRoutes = apiPublicTransportServer + \"routes/\";\r\n\tstrGetRoutes = \"json/routes.json\";\r\n\tstrGetRoutes = \"https://publictransportproject.000webhostapp.com/new/json/routes.json\";\r\n\t\r\n\tvar strGetTimetables = apiPublicTransportServer + \"timetables/\";\r\n\tstrGetTimetables = \"json/timetables.json\";\r\n\tstrGetTimetables = \"https://publictransportproject.000webhostapp.com/new/json/timetables.json\";*/\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Load data.\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tvar allStations = null;\n\tvar allRoutes = null;\n\tvar allTimetables = null;\n\t\n\t//var updatingFromServerInterval = 5000;\n\t\n\tvar loadingStarted = false;\n\t\n\tvar allStationsLoaded = false,\n\t    allRoutesLoaded = false,\n\t    allTimetablesLoaded = false;\n\tvar allStationsJSON = null,\n\t    allRoutesJSON = null,\n\t    allTimetablesJSON = null;\n\t\n\tvar DataProvider = function () {\n\t    function DataProvider() {\n\t        _classCallCheck(this, DataProvider);\n\t    }\n\t\n\t    _createClass(DataProvider, null, [{\n\t        key: 'getAllStations',\n\t        value: function getAllStations() {\n\t            return allStations;\n\t        }\n\t    }, {\n\t        key: 'getAllRoutes',\n\t        value: function getAllRoutes() {\n\t            return allRoutes;\n\t        }\n\t    }, {\n\t        key: 'getAllTimetables',\n\t        value: function getAllTimetables() {\n\t            return allTimetables;\n\t        }\n\t    }, {\n\t        key: 'getAllStationsJSON',\n\t        value: function getAllStationsJSON() {\n\t            return allStationsJSON;\n\t        }\n\t    }, {\n\t        key: 'getAllRoutesJSON',\n\t        value: function getAllRoutesJSON() {\n\t            return allRoutesJSON;\n\t        }\n\t    }, {\n\t        key: 'getAllTimetablesJSON',\n\t        value: function getAllTimetablesJSON() {\n\t            return allTimetablesJSON;\n\t        }\n\t    }, {\n\t        key: 'loadDataAndInitialize',\n\t        value: function () {\n\t            var _ref3 = _asyncToGenerator(_regenerator2.default.mark(function _callee3() {\n\t                return _regenerator2.default.wrap(function _callee3$(_context3) {\n\t                    while (1) {\n\t                        switch (_context3.prev = _context3.next) {\n\t                            case 0:\n\t                                _context3.next = 2;\n\t                                return loadData();\n\t\n\t                            case 2:\n\t                            case 'end':\n\t                                return _context3.stop();\n\t                        }\n\t                    }\n\t                }, _callee3, this);\n\t            }));\n\t\n\t            function loadDataAndInitialize() {\n\t                return _ref3.apply(this, arguments);\n\t            }\n\t\n\t            return loadDataAndInitialize;\n\t        }()\n\t    }, {\n\t        key: 'loadDataOnly',\n\t        value: function () {\n\t            var _ref4 = _asyncToGenerator(_regenerator2.default.mark(function _callee4() {\n\t                return _regenerator2.default.wrap(function _callee4$(_context4) {\n\t                    while (1) {\n\t                        switch (_context4.prev = _context4.next) {\n\t                            case 0:\n\t                                _context4.next = 2;\n\t                                return _loadDataOnly();\n\t\n\t                            case 2:\n\t                            case 'end':\n\t                                return _context4.stop();\n\t                        }\n\t                    }\n\t                }, _callee4, this);\n\t            }));\n\t\n\t            function loadDataOnly() {\n\t                return _ref4.apply(this, arguments);\n\t            }\n\t\n\t            return loadDataOnly;\n\t        }()\n\t    }]);\n\t\n\t    return DataProvider;\n\t}();\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// End load data.\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.default = DataProvider;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// Initailize.\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\tfunction getNextStation(currentStation) {\n\t    for (var j = 0; j <= 1; j++) {\n\t        for (var t = 0, nn = this.stations[j].length; t < nn; t++) {\n\t            if (this.stations[j][t] === currentStation) {\n\t                if (t + 1 !== nn) return this.stations[j][t + 1];else return null;\n\t            }\n\t        }\n\t    }\n\t    return null;\n\t}\n\tfunction getPreviousStation(currentStation) {\n\t    for (var j = 0; j <= 1; j++) {\n\t        for (var t = 0, nn = this.stations[j].length; t < nn; t++) {\n\t            if (this.stations[j][t] === currentStation) {\n\t                if (t !== nn) return this.stations[j][t - 1];else return null;\n\t            }\n\t        }\n\t    }\n\t    return null;\n\t}\n\tfunction getTimetable(station) {\n\t    for (var j = 0; j <= 1; j++) {\n\t        for (var i = 0, n = this.stations[j].length; i < n; i++) {\n\t            if (this.stations[j][i] === station) {\n\t                return this.timetables[j][i];\n\t            }\n\t        }\n\t    }\n\t    return null;\n\t}\n\tfunction findTimeAfter(time) {\n\t    var dateTmp = new Date();\n\t    dateTmp.setMinutes(0);\n\t    dateTmp.setHours(0);\n\t    dateTmp.setSeconds(time);\n\t    var day = dateTmp.getDay();\n\t    //foreach (Table t in table)\n\t    for (var kkk = 0, mnkk = this.table.length, t = this.table[0]; kkk < mnkk; t = this.table[++kkk]) {\n\t        if (t.days.includes(day)) {\n\t\n\t            //foreach (SimpleTime st in t.times)\n\t            for (var iik = 0, mnii = t.times.length, st = t.times[0], stTime; iik < mnii; st = t.times[++iik]) {\n\t                //MessageBox.Show(\"Проверяем: прибытие в \" + TimeSpan.FromMinutes(st.hour * 60 + st.minute).ToString()+\", мы в \"+ TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600).ToString());\n\t                //\n\t                stTime = st.hour * 3600 + st.minute * 60;\n\t                if (stTime >= time /*.Second + time.Minute * 60 + time.Hour * 3600*/ /*time.Hour >= st.hour && time.Minute >= st.minute*/) {\n\t                        //MessageBox.Show(\"Ближайшее время: \" + st.ToString());\n\t                        return stTime - time /*TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600)*/;\n\t                    }\n\t            }\n\t            if (t.times.length !== 0) return t.times[0].hour * 3600 + t.times[0].minute * 60 - time /*TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600)*/ + 86400;\n\t            break;\n\t        }\n\t    }\n\t    return 2160000000;\n\t    //throw new Exception();\n\t}\n\tfunction findTimeBefore(time) {\n\t    var dateTmp = new Date();\n\t    dateTmp.setMinutes(0);\n\t    dateTmp.setHours(0);\n\t    dateTmp.setSeconds(time);\n\t    var day = dateTmp.getDay();\n\t    for (var kkk = 0, mnkk = this.table.length, t = this.table[0], ok = false, st; kkk < mnkk; t = this.table[++kkk]) {\n\t        if (t.days.includes(day)) {\n\t            ok = false;\n\t            st = null;\n\t            for (var iik = 0, mnii = t.times.length, stt = t.times[0]; iik < mnii; stt = t.times[++iik]) {\n\t                //MessageBox.Show(\"Проверяем: прибытие в \" + TimeSpan.FromMinutes(st.hour * 60 + st.minute).ToString()+\", мы в \"+ TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600).ToString());\n\t                //\n\t                if (stt.hour * 3600 + stt.minute * 60 <= time /*time.Hour >= st.hour && time.Minute >= st.minute*/) {\n\t                        ok = true;\n\t                        st = stt;\n\t                        //MessageBox.Show(\"Ближайшее время: \" + st.ToString());\n\t                    } else break;\n\t            }\n\t            if (ok) return st.hour * 3600 + st.minute * 60 - time;\n\t            if (t.times.length !== 0) return t.times[0].hour * 3600 + t.times[0].minute * 60 - time - 86400;\n\t            break;\n\t        }\n\t    }\n\t    return 0; //TimeSpan.FromDays(0/*-25000*/);\n\t    //throw new Exception();\n\t}\n\t\n\tfunction initialize(allStations, allRoutes, allTimetables) {\n\t    //alert(allStations.length);\n\t    //alert(allRoutes.length);\n\t    //alert(allTimetables.length);\n\t\n\t    console.log(\"Start initializing...\");\n\t    var startInitializingMoment = Date.now();\n\t\n\t    var tmpUsedStations = [];\n\t\n\t    function bindRoutesStationsTimetables(station, tmpArr, tabArr, rr) {\n\t        if (station.routes == null) station.routes = [];\n\t        //console.log(station.routes);//!!!\n\t        if (!station.routes.includes(rr)) station.routes.push(rr);\n\t        tmpArr.push(station);\n\t\n\t        var tmp = allTimetables.find(function (element, index, array) {\n\t            return element.stationCode === station.hashcode && element.routeCode === rr.hashcode;\n\t        });\n\t        var tmpTab = tmp == null ? null : tmp;\n\t\n\t        tabArr.push(tmpTab);\n\t    }\n\t\n\t    for (var i = 0, n = allStations.length, currentStation = allStations[0]; i < n; currentStation = allStations[i]) {\n\t        if (currentStation.routesCodes == null || currentStation.routesCodes.length === 0) {\n\t            allStations.splice(i, 1);\n\t            n = allStations.length;\n\t        } else i++;\n\t    }\n\t\n\t    for (var _i = 0, _n = allRoutes.length, rr = allRoutes[0]; _i < _n; rr = allRoutes[++_i]) {\n\t\n\t        rr.getNextStation = getNextStation;\n\t        rr.getPreviousStation = getPreviousStation;\n\t        rr.getTimetable = getTimetable;\n\t\n\t        if (rr.stationsCodes == null || rr.stationsCodes.length === 0) continue;\n\t\n\t        try {\n\t            //if (rr.stationsCodes[rr.stationsCodes.Length - 1] != ']') continue;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t\n\t            rr.stations = [[], []];\n\t            rr.timetables = [[], []];\n\t\n\t            for (var index = 0, tmpArr = [], tabArr = []; index <= 1; index++) {\n\t                var rr_stationsCodes = rr.stationsCodes;\n\t                if (rr_stationsCodes[index] == null || rr_stationsCodes[index].length === 0) continue;\n\t                for (var j = 0, m = rr_stationsCodes[index].length, stationCode = rr_stationsCodes[index][0]; j < m; stationCode = rr_stationsCodes[index][++j]) {\n\t                    var tmpUsed = false;\n\t                    for (var k = 0, mn = allStations.length, station = allStations[0]; k < mn; station = allStations[++k]) {\n\t                        if (station != null && station.hashcode === stationCode) {\n\t                            bindRoutesStationsTimetables(station, tmpArr, tabArr, rr);\n\t                            tmpUsed = true;\n\t                            break;\n\t                        }\n\t                    }\n\t                    if (!tmpUsed) {\n\t                        for (var _k = 0, _mn = allStations.length, _station = allStations[0]; _k < _mn; _station = allStations[++_k]) {\n\t                            if (_station != null && _station.hashcode === stationCode) {\n\t                                bindRoutesStationsTimetables(_station, tmpArr, tabArr, rr);\n\t                                if (!tmpUsedStations.includes(_station)) tmpUsedStations.push(_station);\n\t                                break;\n\t                            }\n\t                        }\n\t                    }\n\t                }\n\t                rr.stations[index] = tmpArr;\n\t                rr.timetables[index] = tabArr;\n\t            }\n\t        } catch (ex) {\n\t            console.log(ex /*.message*/);\n\t            continue;\n\t        }\n\t    }\n\t\n\t    for (var _i2 = 0, _n2 = allTimetables.length, timetable = allTimetables[0]; _i2 < _n2; timetable = allTimetables[++_i2]) {\n\t        timetable.findTimeAfter = findTimeAfter;\n\t        timetable.findTimeBefore = findTimeBefore;\n\t    }\n\t\n\t    //...\n\t    /*\r\n\t    for (let i = 0, n = allStations.length, currentStation = allStations[0]; i < n; currentStation = allStations[i]) {\r\n\t        if (currentStation.routes == undefined || currentStation.routes == null || currentStation.routes.length == 0) {\r\n\t            allStations.splice(i, 1);\r\n\t            n = allStations.length;\r\n\t        }\r\n\t        else i++;\r\n\t    }\r\n\t    */\n\t\n\t    console.log(\"Initialized. Time = \" + (Date.now() - startInitializingMoment) + \" ms.\");\n\t    //console.log(\"\\n\\n\" + JSON.stringify(allTimetables[0]) + \"\\n\\n\");\n\t    //alert(distance({ lat: allStations[0].xCoord, lng: allStations[0].yCoord }, { lat: allStations[5].xCoord, lng: allStations[5].yCoord }));\n\t\n\t\n\t    //for (let t = 0; t < 1000; t++) var ttt = GetStationsAround(allStations[0].coords, 30000).length;\n\t    //console.log(\"test. Time = \" + (Date.now() - startInitializingMoment) + \" ms.\");\n\t\n\t\n\t    //global.initialized = true;\n\t}\n\t\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t// End initailize.\n\t///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\n\texports.default = initialize;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// This method of obtaining a reference to the global object needs to be\n\t// kept identical to the way it is obtained in runtime.js\n\tvar g =\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this;\n\t\n\t// Use `getOwnPropertyNames` because not all browsers support calling\n\t// `hasOwnProperty` on the global `self` object in a worker. See #183.\n\tvar hadRuntime = g.regeneratorRuntime &&\n\t  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\t\n\t// Save the old regeneratorRuntime in case it needs to be restored later.\n\tvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\t\n\t// Force reevalutation of runtime.js.\n\tg.regeneratorRuntime = undefined;\n\t\n\tmodule.exports = __webpack_require__(7);\n\t\n\tif (hadRuntime) {\n\t  // Restore the original runtime.\n\t  g.regeneratorRuntime = oldRuntime;\n\t} else {\n\t  // Remove the global property added by runtime.js.\n\t  try {\n\t    delete g.regeneratorRuntime;\n\t  } catch(e) {\n\t    g.regeneratorRuntime = undefined;\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/**\n\t * Copyright (c) 2014, Facebook, Inc.\n\t * All rights reserved.\n\t *\n\t * This source code is licensed under the BSD-style license found in the\n\t * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n\t * additional grant of patent rights can be found in the PATENTS file in\n\t * the same directory.\n\t */\n\t\n\t!(function(global) {\n\t  \"use strict\";\n\t\n\t  var Op = Object.prototype;\n\t  var hasOwn = Op.hasOwnProperty;\n\t  var undefined; // More compressible than void 0.\n\t  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n\t  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n\t  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n\t  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\t\n\t  var inModule = typeof module === \"object\";\n\t  var runtime = global.regeneratorRuntime;\n\t  if (runtime) {\n\t    if (inModule) {\n\t      // If regeneratorRuntime is defined globally and we're in a module,\n\t      // make the exports object identical to regeneratorRuntime.\n\t      module.exports = runtime;\n\t    }\n\t    // Don't bother evaluating the rest of this file if the runtime was\n\t    // already defined globally.\n\t    return;\n\t  }\n\t\n\t  // Define the runtime globally (as expected by generated code) as either\n\t  // module.exports (if we're in a module) or a new, empty object.\n\t  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\t\n\t  function wrap(innerFn, outerFn, self, tryLocsList) {\n\t    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n\t    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n\t    var generator = Object.create(protoGenerator.prototype);\n\t    var context = new Context(tryLocsList || []);\n\t\n\t    // The ._invoke method unifies the implementations of the .next,\n\t    // .throw, and .return methods.\n\t    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\t\n\t    return generator;\n\t  }\n\t  runtime.wrap = wrap;\n\t\n\t  // Try/catch helper to minimize deoptimizations. Returns a completion\n\t  // record like context.tryEntries[i].completion. This interface could\n\t  // have been (and was previously) designed to take a closure to be\n\t  // invoked without arguments, but in all the cases we care about we\n\t  // already have an existing method we want to call, so there's no need\n\t  // to create a new function object. We can even get away with assuming\n\t  // the method takes exactly one argument, since that happens to be true\n\t  // in every case, so we don't have to touch the arguments object. The\n\t  // only additional allocation required is the completion record, which\n\t  // has a stable shape and so hopefully should be cheap to allocate.\n\t  function tryCatch(fn, obj, arg) {\n\t    try {\n\t      return { type: \"normal\", arg: fn.call(obj, arg) };\n\t    } catch (err) {\n\t      return { type: \"throw\", arg: err };\n\t    }\n\t  }\n\t\n\t  var GenStateSuspendedStart = \"suspendedStart\";\n\t  var GenStateSuspendedYield = \"suspendedYield\";\n\t  var GenStateExecuting = \"executing\";\n\t  var GenStateCompleted = \"completed\";\n\t\n\t  // Returning this object from the innerFn has the same effect as\n\t  // breaking out of the dispatch switch statement.\n\t  var ContinueSentinel = {};\n\t\n\t  // Dummy constructor functions that we use as the .constructor and\n\t  // .constructor.prototype properties for functions that return Generator\n\t  // objects. For full spec compliance, you may wish to configure your\n\t  // minifier not to mangle the names of these two functions.\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t\n\t  // This is a polyfill for %IteratorPrototype% for environments that\n\t  // don't natively support it.\n\t  var IteratorPrototype = {};\n\t  IteratorPrototype[iteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t\n\t  var getProto = Object.getPrototypeOf;\n\t  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\t  if (NativeIteratorPrototype &&\n\t      NativeIteratorPrototype !== Op &&\n\t      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n\t    // This environment has a native %IteratorPrototype%; use it instead\n\t    // of the polyfill.\n\t    IteratorPrototype = NativeIteratorPrototype;\n\t  }\n\t\n\t  var Gp = GeneratorFunctionPrototype.prototype =\n\t    Generator.prototype = Object.create(IteratorPrototype);\n\t  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n\t  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n\t  GeneratorFunctionPrototype[toStringTagSymbol] =\n\t    GeneratorFunction.displayName = \"GeneratorFunction\";\n\t\n\t  // Helper for defining the .next, .throw, and .return methods of the\n\t  // Iterator interface in terms of a single ._invoke method.\n\t  function defineIteratorMethods(prototype) {\n\t    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n\t      prototype[method] = function(arg) {\n\t        return this._invoke(method, arg);\n\t      };\n\t    });\n\t  }\n\t\n\t  runtime.isGeneratorFunction = function(genFun) {\n\t    var ctor = typeof genFun === \"function\" && genFun.constructor;\n\t    return ctor\n\t      ? ctor === GeneratorFunction ||\n\t        // For the native GeneratorFunction constructor, the best we can\n\t        // do is to check its .name property.\n\t        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n\t      : false;\n\t  };\n\t\n\t  runtime.mark = function(genFun) {\n\t    if (Object.setPrototypeOf) {\n\t      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n\t    } else {\n\t      genFun.__proto__ = GeneratorFunctionPrototype;\n\t      if (!(toStringTagSymbol in genFun)) {\n\t        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n\t      }\n\t    }\n\t    genFun.prototype = Object.create(Gp);\n\t    return genFun;\n\t  };\n\t\n\t  // Within the body of any async function, `await x` is transformed to\n\t  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n\t  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n\t  // meant to be awaited.\n\t  runtime.awrap = function(arg) {\n\t    return { __await: arg };\n\t  };\n\t\n\t  function AsyncIterator(generator) {\n\t    function invoke(method, arg, resolve, reject) {\n\t      var record = tryCatch(generator[method], generator, arg);\n\t      if (record.type === \"throw\") {\n\t        reject(record.arg);\n\t      } else {\n\t        var result = record.arg;\n\t        var value = result.value;\n\t        if (value &&\n\t            typeof value === \"object\" &&\n\t            hasOwn.call(value, \"__await\")) {\n\t          return Promise.resolve(value.__await).then(function(value) {\n\t            invoke(\"next\", value, resolve, reject);\n\t          }, function(err) {\n\t            invoke(\"throw\", err, resolve, reject);\n\t          });\n\t        }\n\t\n\t        return Promise.resolve(value).then(function(unwrapped) {\n\t          // When a yielded Promise is resolved, its final value becomes\n\t          // the .value of the Promise<{value,done}> result for the\n\t          // current iteration. If the Promise is rejected, however, the\n\t          // result for this iteration will be rejected with the same\n\t          // reason. Note that rejections of yielded Promises are not\n\t          // thrown back into the generator function, as is the case\n\t          // when an awaited Promise is rejected. This difference in\n\t          // behavior between yield and await is important, because it\n\t          // allows the consumer to decide what to do with the yielded\n\t          // rejection (swallow it and continue, manually .throw it back\n\t          // into the generator, abandon iteration, whatever). With\n\t          // await, by contrast, there is no opportunity to examine the\n\t          // rejection reason outside the generator function, so the\n\t          // only option is to throw it from the await expression, and\n\t          // let the generator function handle the exception.\n\t          result.value = unwrapped;\n\t          resolve(result);\n\t        }, reject);\n\t      }\n\t    }\n\t\n\t    if (typeof process === \"object\" && process.domain) {\n\t      invoke = process.domain.bind(invoke);\n\t    }\n\t\n\t    var previousPromise;\n\t\n\t    function enqueue(method, arg) {\n\t      function callInvokeWithMethodAndArg() {\n\t        return new Promise(function(resolve, reject) {\n\t          invoke(method, arg, resolve, reject);\n\t        });\n\t      }\n\t\n\t      return previousPromise =\n\t        // If enqueue has been called before, then we want to wait until\n\t        // all previous Promises have been resolved before calling invoke,\n\t        // so that results are always delivered in the correct order. If\n\t        // enqueue has not been called before, then it is important to\n\t        // call invoke immediately, without waiting on a callback to fire,\n\t        // so that the async generator function has the opportunity to do\n\t        // any necessary setup in a predictable way. This predictability\n\t        // is why the Promise constructor synchronously invokes its\n\t        // executor callback, and why async functions synchronously\n\t        // execute code before the first await. Since we implement simple\n\t        // async functions in terms of async generators, it is especially\n\t        // important to get this right, even though it requires care.\n\t        previousPromise ? previousPromise.then(\n\t          callInvokeWithMethodAndArg,\n\t          // Avoid propagating failures to Promises returned by later\n\t          // invocations of the iterator.\n\t          callInvokeWithMethodAndArg\n\t        ) : callInvokeWithMethodAndArg();\n\t    }\n\t\n\t    // Define the unified helper method that is used to implement .next,\n\t    // .throw, and .return (see defineIteratorMethods).\n\t    this._invoke = enqueue;\n\t  }\n\t\n\t  defineIteratorMethods(AsyncIterator.prototype);\n\t  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n\t    return this;\n\t  };\n\t  runtime.AsyncIterator = AsyncIterator;\n\t\n\t  // Note that simple async functions are implemented on top of\n\t  // AsyncIterator objects; they just return a Promise for the value of\n\t  // the final result produced by the iterator.\n\t  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n\t    var iter = new AsyncIterator(\n\t      wrap(innerFn, outerFn, self, tryLocsList)\n\t    );\n\t\n\t    return runtime.isGeneratorFunction(outerFn)\n\t      ? iter // If outerFn is a generator, return the full iterator.\n\t      : iter.next().then(function(result) {\n\t          return result.done ? result.value : iter.next();\n\t        });\n\t  };\n\t\n\t  function makeInvokeMethod(innerFn, self, context) {\n\t    var state = GenStateSuspendedStart;\n\t\n\t    return function invoke(method, arg) {\n\t      if (state === GenStateExecuting) {\n\t        throw new Error(\"Generator is already running\");\n\t      }\n\t\n\t      if (state === GenStateCompleted) {\n\t        if (method === \"throw\") {\n\t          throw arg;\n\t        }\n\t\n\t        // Be forgiving, per 25.3.3.3.3 of the spec:\n\t        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\t        return doneResult();\n\t      }\n\t\n\t      context.method = method;\n\t      context.arg = arg;\n\t\n\t      while (true) {\n\t        var delegate = context.delegate;\n\t        if (delegate) {\n\t          var delegateResult = maybeInvokeDelegate(delegate, context);\n\t          if (delegateResult) {\n\t            if (delegateResult === ContinueSentinel) continue;\n\t            return delegateResult;\n\t          }\n\t        }\n\t\n\t        if (context.method === \"next\") {\n\t          // Setting context._sent for legacy support of Babel's\n\t          // function.sent implementation.\n\t          context.sent = context._sent = context.arg;\n\t\n\t        } else if (context.method === \"throw\") {\n\t          if (state === GenStateSuspendedStart) {\n\t            state = GenStateCompleted;\n\t            throw context.arg;\n\t          }\n\t\n\t          context.dispatchException(context.arg);\n\t\n\t        } else if (context.method === \"return\") {\n\t          context.abrupt(\"return\", context.arg);\n\t        }\n\t\n\t        state = GenStateExecuting;\n\t\n\t        var record = tryCatch(innerFn, self, context);\n\t        if (record.type === \"normal\") {\n\t          // If an exception is thrown from innerFn, we leave state ===\n\t          // GenStateExecuting and loop back for another invocation.\n\t          state = context.done\n\t            ? GenStateCompleted\n\t            : GenStateSuspendedYield;\n\t\n\t          if (record.arg === ContinueSentinel) {\n\t            continue;\n\t          }\n\t\n\t          return {\n\t            value: record.arg,\n\t            done: context.done\n\t          };\n\t\n\t        } else if (record.type === \"throw\") {\n\t          state = GenStateCompleted;\n\t          // Dispatch the exception by looping back around to the\n\t          // context.dispatchException(context.arg) call above.\n\t          context.method = \"throw\";\n\t          context.arg = record.arg;\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  // Call delegate.iterator[context.method](context.arg) and handle the\n\t  // result, either by returning a { value, done } result from the\n\t  // delegate iterator, or by modifying context.method and context.arg,\n\t  // setting context.delegate to null, and returning the ContinueSentinel.\n\t  function maybeInvokeDelegate(delegate, context) {\n\t    var method = delegate.iterator[context.method];\n\t    if (method === undefined) {\n\t      // A .throw or .return when the delegate iterator has no .throw\n\t      // method always terminates the yield* loop.\n\t      context.delegate = null;\n\t\n\t      if (context.method === \"throw\") {\n\t        if (delegate.iterator.return) {\n\t          // If the delegate iterator has a return method, give it a\n\t          // chance to clean up.\n\t          context.method = \"return\";\n\t          context.arg = undefined;\n\t          maybeInvokeDelegate(delegate, context);\n\t\n\t          if (context.method === \"throw\") {\n\t            // If maybeInvokeDelegate(context) changed context.method from\n\t            // \"return\" to \"throw\", let that override the TypeError below.\n\t            return ContinueSentinel;\n\t          }\n\t        }\n\t\n\t        context.method = \"throw\";\n\t        context.arg = new TypeError(\n\t          \"The iterator does not provide a 'throw' method\");\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    var record = tryCatch(method, delegate.iterator, context.arg);\n\t\n\t    if (record.type === \"throw\") {\n\t      context.method = \"throw\";\n\t      context.arg = record.arg;\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    var info = record.arg;\n\t\n\t    if (! info) {\n\t      context.method = \"throw\";\n\t      context.arg = new TypeError(\"iterator result is not an object\");\n\t      context.delegate = null;\n\t      return ContinueSentinel;\n\t    }\n\t\n\t    if (info.done) {\n\t      // Assign the result of the finished delegate to the temporary\n\t      // variable specified by delegate.resultName (see delegateYield).\n\t      context[delegate.resultName] = info.value;\n\t\n\t      // Resume execution at the desired location (see delegateYield).\n\t      context.next = delegate.nextLoc;\n\t\n\t      // If context.method was \"throw\" but the delegate handled the\n\t      // exception, let the outer generator proceed normally. If\n\t      // context.method was \"next\", forget context.arg since it has been\n\t      // \"consumed\" by the delegate iterator. If context.method was\n\t      // \"return\", allow the original .return call to continue in the\n\t      // outer generator.\n\t      if (context.method !== \"return\") {\n\t        context.method = \"next\";\n\t        context.arg = undefined;\n\t      }\n\t\n\t    } else {\n\t      // Re-yield the result returned by the delegate method.\n\t      return info;\n\t    }\n\t\n\t    // The delegate iterator is finished, so forget it and continue with\n\t    // the outer generator.\n\t    context.delegate = null;\n\t    return ContinueSentinel;\n\t  }\n\t\n\t  // Define Generator.prototype.{next,throw,return} in terms of the\n\t  // unified ._invoke helper method.\n\t  defineIteratorMethods(Gp);\n\t\n\t  Gp[toStringTagSymbol] = \"Generator\";\n\t\n\t  Gp.toString = function() {\n\t    return \"[object Generator]\";\n\t  };\n\t\n\t  function pushTryEntry(locs) {\n\t    var entry = { tryLoc: locs[0] };\n\t\n\t    if (1 in locs) {\n\t      entry.catchLoc = locs[1];\n\t    }\n\t\n\t    if (2 in locs) {\n\t      entry.finallyLoc = locs[2];\n\t      entry.afterLoc = locs[3];\n\t    }\n\t\n\t    this.tryEntries.push(entry);\n\t  }\n\t\n\t  function resetTryEntry(entry) {\n\t    var record = entry.completion || {};\n\t    record.type = \"normal\";\n\t    delete record.arg;\n\t    entry.completion = record;\n\t  }\n\t\n\t  function Context(tryLocsList) {\n\t    // The root entry object (effectively a try statement without a catch\n\t    // or a finally block) gives us a place to store values thrown from\n\t    // locations where there is no enclosing try statement.\n\t    this.tryEntries = [{ tryLoc: \"root\" }];\n\t    tryLocsList.forEach(pushTryEntry, this);\n\t    this.reset(true);\n\t  }\n\t\n\t  runtime.keys = function(object) {\n\t    var keys = [];\n\t    for (var key in object) {\n\t      keys.push(key);\n\t    }\n\t    keys.reverse();\n\t\n\t    // Rather than returning an object with a next method, we keep\n\t    // things simple and return the next function itself.\n\t    return function next() {\n\t      while (keys.length) {\n\t        var key = keys.pop();\n\t        if (key in object) {\n\t          next.value = key;\n\t          next.done = false;\n\t          return next;\n\t        }\n\t      }\n\t\n\t      // To avoid creating an additional object, we just hang the .value\n\t      // and .done properties off the next function object itself. This\n\t      // also ensures that the minifier will not anonymize the function.\n\t      next.done = true;\n\t      return next;\n\t    };\n\t  };\n\t\n\t  function values(iterable) {\n\t    if (iterable) {\n\t      var iteratorMethod = iterable[iteratorSymbol];\n\t      if (iteratorMethod) {\n\t        return iteratorMethod.call(iterable);\n\t      }\n\t\n\t      if (typeof iterable.next === \"function\") {\n\t        return iterable;\n\t      }\n\t\n\t      if (!isNaN(iterable.length)) {\n\t        var i = -1, next = function next() {\n\t          while (++i < iterable.length) {\n\t            if (hasOwn.call(iterable, i)) {\n\t              next.value = iterable[i];\n\t              next.done = false;\n\t              return next;\n\t            }\n\t          }\n\t\n\t          next.value = undefined;\n\t          next.done = true;\n\t\n\t          return next;\n\t        };\n\t\n\t        return next.next = next;\n\t      }\n\t    }\n\t\n\t    // Return an iterator with no values.\n\t    return { next: doneResult };\n\t  }\n\t  runtime.values = values;\n\t\n\t  function doneResult() {\n\t    return { value: undefined, done: true };\n\t  }\n\t\n\t  Context.prototype = {\n\t    constructor: Context,\n\t\n\t    reset: function(skipTempReset) {\n\t      this.prev = 0;\n\t      this.next = 0;\n\t      // Resetting context._sent for legacy support of Babel's\n\t      // function.sent implementation.\n\t      this.sent = this._sent = undefined;\n\t      this.done = false;\n\t      this.delegate = null;\n\t\n\t      this.method = \"next\";\n\t      this.arg = undefined;\n\t\n\t      this.tryEntries.forEach(resetTryEntry);\n\t\n\t      if (!skipTempReset) {\n\t        for (var name in this) {\n\t          // Not sure about the optimal order of these conditions:\n\t          if (name.charAt(0) === \"t\" &&\n\t              hasOwn.call(this, name) &&\n\t              !isNaN(+name.slice(1))) {\n\t            this[name] = undefined;\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    stop: function() {\n\t      this.done = true;\n\t\n\t      var rootEntry = this.tryEntries[0];\n\t      var rootRecord = rootEntry.completion;\n\t      if (rootRecord.type === \"throw\") {\n\t        throw rootRecord.arg;\n\t      }\n\t\n\t      return this.rval;\n\t    },\n\t\n\t    dispatchException: function(exception) {\n\t      if (this.done) {\n\t        throw exception;\n\t      }\n\t\n\t      var context = this;\n\t      function handle(loc, caught) {\n\t        record.type = \"throw\";\n\t        record.arg = exception;\n\t        context.next = loc;\n\t\n\t        if (caught) {\n\t          // If the dispatched exception was caught by a catch block,\n\t          // then let that catch block handle the exception normally.\n\t          context.method = \"next\";\n\t          context.arg = undefined;\n\t        }\n\t\n\t        return !! caught;\n\t      }\n\t\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        var record = entry.completion;\n\t\n\t        if (entry.tryLoc === \"root\") {\n\t          // Exception thrown outside of any try block that could handle\n\t          // it, so set the completion value of the entire function to\n\t          // throw the exception.\n\t          return handle(\"end\");\n\t        }\n\t\n\t        if (entry.tryLoc <= this.prev) {\n\t          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n\t          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\t\n\t          if (hasCatch && hasFinally) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            } else if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else if (hasCatch) {\n\t            if (this.prev < entry.catchLoc) {\n\t              return handle(entry.catchLoc, true);\n\t            }\n\t\n\t          } else if (hasFinally) {\n\t            if (this.prev < entry.finallyLoc) {\n\t              return handle(entry.finallyLoc);\n\t            }\n\t\n\t          } else {\n\t            throw new Error(\"try statement without catch or finally\");\n\t          }\n\t        }\n\t      }\n\t    },\n\t\n\t    abrupt: function(type, arg) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc <= this.prev &&\n\t            hasOwn.call(entry, \"finallyLoc\") &&\n\t            this.prev < entry.finallyLoc) {\n\t          var finallyEntry = entry;\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (finallyEntry &&\n\t          (type === \"break\" ||\n\t           type === \"continue\") &&\n\t          finallyEntry.tryLoc <= arg &&\n\t          arg <= finallyEntry.finallyLoc) {\n\t        // Ignore the finally entry if control is not jumping to a\n\t        // location outside the try/catch block.\n\t        finallyEntry = null;\n\t      }\n\t\n\t      var record = finallyEntry ? finallyEntry.completion : {};\n\t      record.type = type;\n\t      record.arg = arg;\n\t\n\t      if (finallyEntry) {\n\t        this.method = \"next\";\n\t        this.next = finallyEntry.finallyLoc;\n\t        return ContinueSentinel;\n\t      }\n\t\n\t      return this.complete(record);\n\t    },\n\t\n\t    complete: function(record, afterLoc) {\n\t      if (record.type === \"throw\") {\n\t        throw record.arg;\n\t      }\n\t\n\t      if (record.type === \"break\" ||\n\t          record.type === \"continue\") {\n\t        this.next = record.arg;\n\t      } else if (record.type === \"return\") {\n\t        this.rval = this.arg = record.arg;\n\t        this.method = \"return\";\n\t        this.next = \"end\";\n\t      } else if (record.type === \"normal\" && afterLoc) {\n\t        this.next = afterLoc;\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    },\n\t\n\t    finish: function(finallyLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.finallyLoc === finallyLoc) {\n\t          this.complete(entry.completion, entry.afterLoc);\n\t          resetTryEntry(entry);\n\t          return ContinueSentinel;\n\t        }\n\t      }\n\t    },\n\t\n\t    \"catch\": function(tryLoc) {\n\t      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n\t        var entry = this.tryEntries[i];\n\t        if (entry.tryLoc === tryLoc) {\n\t          var record = entry.completion;\n\t          if (record.type === \"throw\") {\n\t            var thrown = record.arg;\n\t            resetTryEntry(entry);\n\t          }\n\t          return thrown;\n\t        }\n\t      }\n\t\n\t      // The context.catch method must only be called with a location\n\t      // argument that corresponds to a known catch block.\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t\n\t    delegateYield: function(iterable, resultName, nextLoc) {\n\t      this.delegate = {\n\t        iterator: values(iterable),\n\t        resultName: resultName,\n\t        nextLoc: nextLoc\n\t      };\n\t\n\t      if (this.method === \"next\") {\n\t        // Deliberately forget the last sent value so that we don't\n\t        // accidentally pass it on to the delegate.\n\t        this.arg = undefined;\n\t      }\n\t\n\t      return ContinueSentinel;\n\t    }\n\t  };\n\t})(\n\t  // Among the various tricks for obtaining a reference to the global\n\t  // object, this seems to be the most reliable technique that does not\n\t  // use indirect eval (which violates Content Security Policy).\n\t  typeof global === \"object\" ? global :\n\t  typeof window === \"object\" ? window :\n\t  typeof self === \"object\" ? self : this\n\t);\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(3)))\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sw.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 78fb37d478cd559517f9","import DataProvider from './dataProvider';\r\nimport ApiConfig from './config';\r\n//import AppClient from './client';\r\n//let s = '123hello123';\r\n//console.log('111111111111111111111111111111111111111111');\r\n\r\n//if (navigator.onLine === undefined || navigator.onLine === false){\r\n  DataProvider.loadDataAndInitialize();\r\n//}\r\n//else {\r\n//  DataProvider.loadDataOnly();\r\n//}\r\n\r\nconst APP_CACHE_NAME = 'mosm-app-v1';\r\nconst TILE_CACHE_NAME = 'mosm-tiles-v1';\r\n\r\nconst urlsToCache = [\r\n  '/',\r\n  '/static/js/bundle.js',\r\n  '/static/css/style.css',\r\n  ApiConfig.apiGetStationsUrl,\r\n  ApiConfig.apiGetRoutesUrl,\r\n  ApiConfig.apiGetTimetablesUrl\r\n];\r\n\r\nself.addEventListener('install', function(event) {\r\n  //console.log('!!!!!!!!!install');\r\n\r\n  // Perform install steps\r\n  const cachePromise = caches.open(APP_CACHE_NAME)\r\n    .then(function(cache) {\r\n      console.log('install: opened cache');\r\n      return cache.addAll(urlsToCache);\r\n    })\r\n    .then(() => {\r\n      console.log('install: added all urls to cache');\r\n    });\r\n\r\n  event.waitUntil(cachePromise);\r\n});\r\n\r\nself.addEventListener('activate', function(event) {\r\n  //console.log('!!!!!!!!!activate');\r\n\r\n  /**/\r\n});\r\n\r\n/*self.addEventListener('fetch', function(event) {\r\n  console.log('there is a fetch');\r\n  const { url } = event.request;\r\n\r\n  event.respondWith(\r\n    caches.match(event.request)\r\n      .then(function(response) {\r\n        // Cache hit - return response\r\n        if (response) {\r\n          console.log('responding from cache', url);\r\n          return response;\r\n        }\r\n        console.log('fetching and adding to cache', url);\r\n        caches.open(TILE_CACHE_NAME).then(cache => cache.add(url));\r\n\r\n        return fetch(event.request);\r\n      }\r\n    )\r\n  );\r\n});*/\r\n\r\n/*self.addEventListener('fetch', function(event) {\r\n  event.respondWith(\r\n    caches.match(event.request).catch(function() {\r\n      return fetch(event.request).then(function(response) {\r\n        return caches.open('v1').then(function(cache) {\r\n          cache.put(event.request, response.clone());\r\n          return response;\r\n        });  \r\n      });\r\n    })\r\n  );\r\n});*/\r\n\r\nself.addEventListener('fetch', function(event) {\r\n  event.respondWith(\r\n    fetch(event.request).catch(function() {\r\n      return caches.match(event.request);\r\n    })\r\n  );\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/modules/public-transport-client/sw.js","export default {\r\n    apiPublicTransportServer: \"https://ptp-97126.app.xervo.io/\",\r\n    apiGetStationsUrl: \"https://publictransportproject.000webhostapp.com/new/json/stations.json\", //\"stations\"\r\n    apiGetRoutesUrl: \"https://publictransportproject.000webhostapp.com/new/json/routes.json\", //\"routes\"\r\n    apiGetTimetablesUrl: \"https://publictransportproject.000webhostapp.com/new/json/timetables.json\" //\"timetables\"\r\n};\n\n\n// WEBPACK FOOTER //\n// ./src/modules/public-transport-client/config.js","module.exports = require(\"regenerator-runtime\");\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/babel-preset-react-app/~/babel-runtime/regenerator/index.js\n// module id = 2\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/process/browser.js\n// module id = 3\n// module chunks = 0","//var fetch = require('node-fetch');\r\nimport initialize from './../public-transport-initialize-data/initialize';\r\n\r\nimport ApiConfig from './config';\r\n//var apiPublicTransportServer = ApiConfig.apiPublicTransportServer;\r\n\r\n/*var strGetStations = apiPublicTransportServer + \"stations/\";\r\nstrGetStations = \"json/stations.json\";\r\nstrGetStations = \"https://publictransportproject.000webhostapp.com/new/json/stations.json\"; \r\n\r\nvar strGetRoutes = apiPublicTransportServer + \"routes/\";\r\nstrGetRoutes = \"json/routes.json\";\r\nstrGetRoutes = \"https://publictransportproject.000webhostapp.com/new/json/routes.json\";\r\n\r\nvar strGetTimetables = apiPublicTransportServer + \"timetables/\";\r\nstrGetTimetables = \"json/timetables.json\";\r\nstrGetTimetables = \"https://publictransportproject.000webhostapp.com/new/json/timetables.json\";*/\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Load data.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nvar allStations = null;\r\nvar allRoutes = null;\r\nvar allTimetables = null;\r\n\r\n//var updatingFromServerInterval = 5000;\r\n\r\nvar loadingStarted = false;\r\n\r\nvar allStationsLoaded = false, allRoutesLoaded = false,  allTimetablesLoaded = false;\r\nvar allStationsJSON = null, allRoutesJSON = null, allTimetablesJSON = null;\r\n\r\nasync function loadDataOnly() {\r\n    if(!allStationsLoaded){\r\n        if (localStorage[\"allStationsJSON\"] === undefined || localStorage[\"allStationsJSON\"] == null) {\r\n            console.log(\"Downloading stations from server...\");\r\n\r\n            let response = await fetch(ApiConfig.apiGetStationsUrl, {mode: 'no-cors'});\r\n            allStationsJSON = await response.text();\r\n            allStations = JSON.parse(allStationsJSON);//await response.json();\r\n\r\n            if (allStations !== undefined && allStations != null) localStorage[\"allStationsJSON\"] = allStationsJSON;\r\n            allStationsLoaded = true;\r\n            console.log(\"Stations loaded from server.\");\r\n        }\r\n        else {\r\n            allStations = JSON.parse(localStorage[\"allStationsJSON\"]);\r\n            allStationsLoaded = true;\r\n            console.log(\"Stations loaded from localStorage.\");\r\n        }\r\n    }\r\n\r\n    if(!allRoutesLoaded){\r\n        if (localStorage[\"allRoutesJSON\"] === undefined || localStorage[\"allRoutesJSON\"] == null) {\r\n            console.log(\"Downloading routes from server...\");\r\n\r\n            let response = await fetch(ApiConfig.apiGetRoutesUrl);\r\n            allRoutesJSON = await response.text();\r\n            allRoutes = JSON.parse(allRoutesJSON);//await response.json();\r\n\r\n            if (allRoutes !== undefined && allRoutes != null) localStorage[\"allRoutesJSON\"] = allRoutesJSON;\r\n            allRoutesLoaded = true;\r\n            console.log(\"Routes loaded from server.\");\r\n        }\r\n        else {\r\n            allRoutes = JSON.parse(localStorage[\"allRoutesJSON\"]);\r\n            allRoutesLoaded = true;\r\n            console.log(\"Routes loaded from localStorage.\");\r\n        }\r\n    }\r\n\r\n    if(!allTimetablesLoaded){\r\n        if (localStorage[\"allTimetablesJSON\"] === undefined || localStorage[\"allTimetablesJSON\"] == null) {\r\n            console.log(\"Downloading timetables from server...\");\r\n\r\n            let response = await fetch(ApiConfig.apiGetTimetablesUrl);\r\n            allTimetablesJSON = await response.text();\r\n            allTimetables = JSON.parse(allTimetablesJSON);//await response.json();\r\n\r\n            if (allTimetables !== undefined && allTimetables != null) localStorage[\"allTimetablesJSON\"] = allTimetablesJSON;\r\n            allTimetablesLoaded = true;\r\n            console.log(\"Timetables loaded from server.\");\r\n        }\r\n        else {\r\n            allTimetables = JSON.parse(localStorage[\"allTimetablesJSON\"]);\r\n            allTimetablesLoaded = true;\r\n            console.log(\"Timetables loaded from localStorage.\");\r\n        }\r\n    }\r\n}\r\n\r\nasync function loadData() {\r\n    if(!loadingStarted){\r\n        loadingStarted = true;\r\n\r\n        await loadDataOnly();\r\n\r\n        if (allStationsLoaded && allRoutesLoaded && allTimetablesLoaded) {\r\n            initialize(allStations, allRoutes, allTimetables);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n//loadData();\r\n\r\nclass DataProvider {\r\n    static getAllStations() {\r\n        return allStations;\r\n    }\r\n    static getAllRoutes() {\r\n        return allRoutes;\r\n    }\r\n    static getAllTimetables() {\r\n        return allTimetables;\r\n    }\r\n    static getAllStationsJSON() {\r\n        return allStationsJSON;\r\n    }\r\n    static getAllRoutesJSON() {\r\n        return allRoutesJSON;\r\n    }\r\n    static getAllTimetablesJSON() {\r\n        return allTimetablesJSON;\r\n    }\r\n    static async loadDataAndInitialize() {\r\n        await loadData();\r\n    }\r\n    static async loadDataOnly() {\r\n        await loadDataOnly();\r\n    }\r\n}\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// End load data.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default DataProvider;\n\n\n// WEBPACK FOOTER //\n// ./src/modules/public-transport-client/dataProvider.js","///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// Initailize.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nfunction getNextStation(currentStation) {\r\n    for (let j = 0; j <= 1; j++) {\r\n        for (let t = 0, nn = this.stations[j].length; t < nn; t++) {\r\n            if (this.stations[j][t] === currentStation) {\r\n                if (t + 1 !== nn) return this.stations[j][t + 1];\r\n                else return null;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getPreviousStation(currentStation) {\r\n    for (let j = 0; j <= 1; j++) {\r\n        for (let t = 0, nn = this.stations[j].length; t < nn; t++) {\r\n            if (this.stations[j][t] === currentStation) {\r\n                if (t !== nn) return this.stations[j][t - 1];\r\n                else return null;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction getTimetable(station) {\r\n    for (let j = 0; j <= 1; j++) {\r\n        for (let i = 0, n = this.stations[j].length; i < n; i++) {\r\n            if (this.stations[j][i] === station) {\r\n                return this.timetables[j][i];\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction findTimeAfter(time) {\r\n    var dateTmp = new Date();\r\n    dateTmp.setMinutes(0);\r\n    dateTmp.setHours(0);\r\n    dateTmp.setSeconds(time);\r\n    var day = dateTmp.getDay();\r\n    //foreach (Table t in table)\r\n    for (let kkk = 0, mnkk = this.table.length, t = this.table[0]; kkk < mnkk; t = this.table[++kkk]) {\r\n        if (t.days.includes(day)) {\r\n\r\n            //foreach (SimpleTime st in t.times)\r\n            for (let iik = 0, mnii = t.times.length, st = t.times[0], stTime; iik < mnii; st = t.times[++iik]) {\r\n                //MessageBox.Show(\"Проверяем: прибытие в \" + TimeSpan.FromMinutes(st.hour * 60 + st.minute).ToString()+\", мы в \"+ TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600).ToString());\r\n                //\r\n                stTime = st.hour * 3600 + st.minute * 60;\r\n                if (stTime >= time/*.Second + time.Minute * 60 + time.Hour * 3600*/ /*time.Hour >= st.hour && time.Minute >= st.minute*/) {\r\n                    //MessageBox.Show(\"Ближайшее время: \" + st.ToString());\r\n                    return stTime - time/*TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600)*/;\r\n                }\r\n            }\r\n            if (t.times.length !== 0) return t.times[0].hour * 3600 + t.times[0].minute * 60 - time/*TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600)*/ + 86400;\r\n            break;\r\n        }\r\n    }\r\n    return 2160000000;\r\n    //throw new Exception();\r\n}\r\nfunction findTimeBefore(time) {\r\n    var dateTmp = new Date();\r\n    dateTmp.setMinutes(0);\r\n    dateTmp.setHours(0);\r\n    dateTmp.setSeconds(time);\r\n    var day = dateTmp.getDay();\r\n    for (let kkk = 0, mnkk = this.table.length, t = this.table[0], ok = false, st; kkk < mnkk; t = this.table[++kkk]) {\r\n        if (t.days.includes(day)) {\r\n            ok = false;\r\n            st = null;\r\n            for (let iik = 0, mnii = t.times.length, stt = t.times[0]; iik < mnii; stt = t.times[++iik]) {\r\n                //MessageBox.Show(\"Проверяем: прибытие в \" + TimeSpan.FromMinutes(st.hour * 60 + st.minute).ToString()+\", мы в \"+ TimeSpan.FromSeconds(time.Second + time.Minute * 60 + time.Hour * 3600).ToString());\r\n                //\r\n                if (stt.hour * 3600 + stt.minute * 60 <= time/*time.Hour >= st.hour && time.Minute >= st.minute*/) {\r\n                    ok = true;\r\n                    st = stt;\r\n                    //MessageBox.Show(\"Ближайшее время: \" + st.ToString());\r\n                }\r\n                else break;\r\n            }\r\n            if (ok) return st.hour * 3600 + st.minute * 60 - time;\r\n            if (t.times.length !== 0) return t.times[0].hour * 3600 + t.times[0].minute * 60 - time - 86400;\r\n            break;\r\n        }\r\n    }\r\n    return 0;//TimeSpan.FromDays(0/*-25000*/);\r\n    //throw new Exception();\r\n}\r\n\r\n\r\nfunction initialize(allStations, allRoutes, allTimetables) {\r\n    //alert(allStations.length);\r\n    //alert(allRoutes.length);\r\n    //alert(allTimetables.length);\r\n\r\n    console.log(\"Start initializing...\");\r\n    var startInitializingMoment = Date.now();\r\n\r\n    var tmpUsedStations = [];\r\n\r\n    function bindRoutesStationsTimetables(station, tmpArr, tabArr, rr) {\r\n        if (station.routes == null) station.routes = [];\r\n        //console.log(station.routes);//!!!\r\n        if (!(station.routes.includes(rr))) station.routes.push(rr);\r\n        tmpArr.push(station);\r\n\r\n        var tmp = allTimetables.find(function (element, index, array) {\r\n            return element.stationCode === station.hashcode && element.routeCode === rr.hashcode;\r\n        });\r\n        var tmpTab = (tmp == null) ? null : tmp;\r\n\r\n        tabArr.push(tmpTab);\r\n    }\r\n\r\n    for (let i = 0, n = allStations.length, currentStation = allStations[0]; i < n; currentStation = allStations[i]) {\r\n        if (currentStation.routesCodes == null || currentStation.routesCodes.length === 0) {\r\n            allStations.splice(i, 1);\r\n            n = allStations.length;\r\n        }\r\n        else i++;\r\n    }\r\n\r\n    for (let i = 0, n = allRoutes.length, rr = allRoutes[0]; i < n; rr = allRoutes[++i]) {\r\n\r\n        rr.getNextStation = getNextStation; \r\n        rr.getPreviousStation = getPreviousStation;\r\n        rr.getTimetable = getTimetable;\r\n\r\n        if (rr.stationsCodes == null || rr.stationsCodes.length === 0) continue;\r\n\r\n        try {\r\n            //if (rr.stationsCodes[rr.stationsCodes.Length - 1] != ']') continue;//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n\r\n            rr.stations = [[],[]];\r\n            rr.timetables = [[],[]];\r\n\r\n\r\n\r\n            for (let index = 0, tmpArr = [], tabArr = [] ; index <= 1; index++) {\r\n                var rr_stationsCodes = rr.stationsCodes;\r\n                if (rr_stationsCodes[index] == null || rr_stationsCodes[index].length === 0) continue;\r\n                for (let j = 0, m = rr_stationsCodes[index].length, stationCode = rr_stationsCodes[index][0]; j < m; stationCode = rr_stationsCodes[index][++j]) {\r\n                    var tmpUsed = false;\r\n                    for (let k = 0, mn = allStations.length, station = allStations[0]; k < mn; station = allStations[++k]) {\r\n                        if (station != null && station.hashcode === stationCode) {\r\n                            bindRoutesStationsTimetables(station, tmpArr, tabArr, rr);\r\n                            tmpUsed = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!tmpUsed) {\r\n                        for (let k = 0, mn = allStations.length, station = allStations[0]; k < mn; station = allStations[++k]) {\r\n                            if (station != null && station.hashcode === stationCode) {\r\n                                bindRoutesStationsTimetables(station, tmpArr, tabArr, rr);\r\n                                if (!tmpUsedStations.includes(station)) tmpUsedStations.push(station);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                rr.stations[index] = tmpArr;\r\n                rr.timetables[index] = tabArr;\r\n\r\n            }\r\n        }\r\n        catch (ex) {\r\n            console.log(ex/*.message*/);\r\n            continue;\r\n        }\r\n    }\r\n\r\n    for (let i = 0, n = allTimetables.length, timetable = allTimetables[0]; i < n; timetable = allTimetables[++i]) {\r\n        timetable.findTimeAfter = findTimeAfter;\r\n        timetable.findTimeBefore = findTimeBefore;\r\n    }\r\n\r\n    //...\r\n    /*\r\n    for (let i = 0, n = allStations.length, currentStation = allStations[0]; i < n; currentStation = allStations[i]) {\r\n        if (currentStation.routes == undefined || currentStation.routes == null || currentStation.routes.length == 0) {\r\n            allStations.splice(i, 1);\r\n            n = allStations.length;\r\n        }\r\n        else i++;\r\n    }\r\n    */\r\n\r\n    console.log(\"Initialized. Time = \" + (Date.now() - startInitializingMoment) + \" ms.\");\r\n    //console.log(\"\\n\\n\" + JSON.stringify(allTimetables[0]) + \"\\n\\n\");\r\n    //alert(distance({ lat: allStations[0].xCoord, lng: allStations[0].yCoord }, { lat: allStations[5].xCoord, lng: allStations[5].yCoord }));\r\n\r\n\r\n    //for (let t = 0; t < 1000; t++) var ttt = GetStationsAround(allStations[0].coords, 30000).length;\r\n    //console.log(\"test. Time = \" + (Date.now() - startInitializingMoment) + \" ms.\");\r\n\r\n\r\n    //global.initialized = true;\r\n}\r\n\r\n\r\n\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n// End initailize.\r\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport default initialize;\n\n\n// WEBPACK FOOTER //\n// ./src/modules/public-transport-initialize-data/initialize.js","// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g =\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this;\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = require(\"./runtime\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime-module.js\n// module id = 6\n// module chunks = 0","/**\n * Copyright (c) 2014, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * https://raw.github.com/facebook/regenerator/master/LICENSE file. An\n * additional grant of patent rights can be found in the PATENTS file in\n * the same directory.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = typeof module === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    if (typeof process === \"object\" && process.domain) {\n      invoke = process.domain.bind(invoke);\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // Among the various tricks for obtaining a reference to the global\n  // object, this seems to be the most reliable technique that does not\n  // use indirect eval (which violates Content Security Policy).\n  typeof global === \"object\" ? global :\n  typeof window === \"object\" ? window :\n  typeof self === \"object\" ? self : this\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/regenerator-runtime/runtime.js\n// module id = 7\n// module chunks = 0"],"sourceRoot":""}